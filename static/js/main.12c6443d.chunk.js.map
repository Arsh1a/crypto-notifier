{"version":3,"sources":["sounds/notification.mp3","utils/playSound.js","utils/useApiRequest.js","components/Navbar.js","components/Cryptos.js","components/Footer.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["playSound","audioRef","current","play","useApiRequest","url","secondUrl","thirdUrl","useState","data","setData","isLoaded","setIsLoaded","error","setError","fetchData","axios","all","get","then","spread","obj1","obj2","obj3","catch","response","useEffect","interval","setInterval","clearInterval","Navbar","setSoundActive","soundActive","handleSubmit","tempAlertAtMinimum","setTempAlertAtMinimum","setShowOnly","showOnly","className","onClick","onSubmit","required","type","value","onChange","e","target","Cryptos","currencies","exchangeRates","calculateAfter","exchangeResults","alertAtMinimum","calculateResult","onlyDeals","length","map","currency","index","USD","href","rel","title","src","height","width","alt","Footer","Main","setExchangeRates","setCurrencies","setExchangeResults","setAlertAtMinimum","setOnlyDeals","useRef","console","log","slice","oldArray","currencyList","Object","keys","sort","initExchangeResults","reduce","acc","cur","values","some","el","filtered","entries","filter","result","fromEntries","resultArray","ref","notificationSfx","preventDefault","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12c6443d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/notification.aec03572.mp3\";","const playSound = (audioRef) => {\r\n  if (audioRef.current) {\r\n    audioRef.current.play();\r\n  }\r\n};\r\nexport default playSound;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useApiRequest = (url, secondUrl, thirdUrl) => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = () => {\r\n    if (secondUrl && thirdUrl) {\r\n      axios\r\n        .all([axios.get(url), axios.get(secondUrl), axios.get(thirdUrl)])\r\n        .then(\r\n          axios.spread((obj1, obj2, obj3) => {\r\n            setIsLoaded(true);\r\n            setData({ ...obj1.data, ...obj2.data, ...obj3.data });\r\n          })\r\n        )\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(url)\r\n        .then((response) => {\r\n          setIsLoaded(true);\r\n          setData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Init fetching\r\n    fetchData();\r\n    //Fetching every described second\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 20000);\r\n    return () => clearInterval(interval);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [url, secondUrl]);\r\n\r\n  return { error, isLoaded, data };\r\n};\r\n\r\nexport default useApiRequest;\r\n","import React from \"react\";\r\nimport { MdVolumeUp, MdVolumeOff } from \"react-icons/md\";\r\nimport { playSound } from \"../utils\";\r\n\r\nfunction Navbar({\r\n  setSoundActive,\r\n  soundActive,\r\n  audioRef,\r\n  handleSubmit,\r\n  tempAlertAtMinimum,\r\n  setTempAlertAtMinimum,\r\n  setShowOnly,\r\n  showOnly,\r\n}) {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"left-navbar\">\r\n        <div\r\n          className=\"sound\"\r\n          onClick={() => {\r\n            setSoundActive(!soundActive);\r\n            !soundActive && playSound(audioRef);\r\n          }}\r\n        >\r\n          {soundActive ? <MdVolumeUp /> : <MdVolumeOff />}\r\n        </div>\r\n        <button onClick={() => setShowOnly(!showOnly)}>\r\n          {showOnly ? <>Show all</> : <>Show only green</>}\r\n        </button>\r\n      </div>\r\n      <div className=\"right-navbar\">\r\n        <div className=\"alert-at\">\r\n          Alert at:\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              required\r\n              type=\"number\"\r\n              value={tempAlertAtMinimum}\r\n              onChange={(e) => setTempAlertAtMinimum(e.target.value)}\r\n            />\r\n            <input type=\"submit\" value=\"Apply\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Cryptos({\r\n  currencies,\r\n  exchangeRates,\r\n  calculateAfter,\r\n  exchangeResults,\r\n  alertAtMinimum,\r\n  calculateResult,\r\n  onlyDeals,\r\n  showOnly,\r\n  data,\r\n}) {\r\n  if (data.length === 0) return <h1>Empty</h1>;\r\n  return (\r\n    <>\r\n      {exchangeRates.length !== calculateAfter && (\r\n        <div className=\"loading-results\">\r\n          It takes {(20 * calculateAfter) / 60} minutes to calculate results...\r\n        </div>\r\n      )}\r\n      <div className=\"crypto-container\">\r\n        {data.map((currency, index) => (\r\n          <div className=\"crypto\" key={index}>\r\n            <h1>{currency}</h1>\r\n            <div className=\"rates\">\r\n              {exchangeRates[0][currency].USD}$\r\n              {exchangeRates.length === calculateAfter && (\r\n                <>â†’{exchangeRates[exchangeRates.length - 1][currency].USD}$</>\r\n              )}\r\n            </div>\r\n            {\r\n              <p\r\n                className={\r\n                  exchangeResults[0][currency] >= alertAtMinimum ? \"going-up\" : \"going-down\"\r\n                }\r\n              >\r\n                result :{calculateResult(currency)}\r\n              </p>\r\n            }\r\n            <div className=\"crypto-exchange\">\r\n              <a\r\n                href={`https://www.binance.com/en/trade/${currency}_USDT`}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <img\r\n                  title={`Trade ${currency} in Binance`}\r\n                  src=\"/crypto-notifier/binance-icon.svg\"\r\n                  height=\"30\"\r\n                  width=\"30\"\r\n                  alt=\"Binance\"\r\n                />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cryptos;\r\n","import React from \"react\";\r\nimport { GoMarkGithub } from \"react-icons/go\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <a href=\"https://github.com/Arsh1a/crypto-notifier\" target=\"_blank\" rel=\"noreferrer\">\r\n        <GoMarkGithub />\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport notificationSfx from \"../sounds/notification.mp3\";\r\nimport { useApiRequest, playSound } from \"../utils\";\r\nimport Navbar from \"./Navbar\";\r\nimport Cryptos from \"./Cryptos\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst selectedCurrencies1 =\r\n  \"BTC,SHIB,CELO,CFX,BURGER,DNT,MASK,DATA,OG,CTXC,MBL,WAVES,MBL,ONG,AUDIO,HBAR,RLC,GTO,RAMP,SLP,DUSK,ONE,DOGE,TOMO,HARD,FORTH,CTSI,ICP,EPS,DCR,KEEP,PUNDIX,OM,COCOS,TRB,IRIS,AR,SUPER,DREP,WING,FIO,SOL,ANT,TWT,GTC,QTUM,CTK,WNXM,RVN,MTL,IOTX,SUSHI,ATOM,NKN,LINA,EGLD,STPT,ZEN,ZIL,ZRX,ZEC,YFI,XMR,XVS,XTZ\";\r\nconst selectedCurrencies2 =\r\n  \"ATA,ALPHA,ALICE,ARPA,AVE,AVA,ARDR,ANRR,BAL,BZRX,BEL,BADGER,BTT,BEAN,BCH,COMP,CRV,COS,CAKE,DEGO,DGB,DOT,ETH,EOS,ETC,FTT,HIVE,INJ,JST,KSM,LRC,LINK,NBS,LIT,MFT,MKR,MDT,ONT,ORN,PERF,PNT,RUNE,REEF,REN,ROSE,SC,STMX,SKL,SAND,SNX,STX,SRM,TRB,TROY,TRU,TORN,THETA,TCT,POLS,TRX,TKO,UNO,ATM,ASR,ACM,AUTO,AKRO\";\r\nconst selectedCurrencies3 =\r\n  \"ALGO,BAR,BAND,BNB,BLZ,DODO,DIA,FIS,FIRO,GXS,GRT,IOTA,JUV,KEY,KNC,KLAY,LUNA,LSK,NULS,NU,NMR,NEO,OCEN,OGN,OMG,PSG,POND,PHA,PERP,PERL,PAX,RIF,RSR,SFP,SXP,SUN,STORJ,TLM,UNFI,UTK,VTHO,VET,WTC,WAN,WRX,WNXM,WIN,XVG,XRP,XLM,XEM\";\r\n\r\nfunction Main() {\r\n  const [exchangeRates, setExchangeRates] = useState([]);\r\n  const [currencies, setCurrencies] = useState([]);\r\n  const [soundActive, setSoundActive] = useState(false);\r\n  const [exchangeResults, setExchangeResults] = useState([]);\r\n  const [calculateAfter] = useState(9);\r\n  const [alertAtMinimum, setAlertAtMinimum] = useState(1.05);\r\n  const [tempAlertAtMinimum, setTempAlertAtMinimum] = useState(1.05);\r\n  const [showOnly, setShowOnly] = useState(false);\r\n  const [onlyDeals, setOnlyDeals] = useState([]);\r\n  const { data, error, isLoaded } = useApiRequest(\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies1}&tsyms=USD`,\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies2}&tsyms=USD`,\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies3}&tsyms=USD`\r\n  );\r\n  const audioRef = useRef();\r\n\r\n  useEffect(() => {\r\n    console.log(\"run\");\r\n  }, []);\r\n\r\n  //Init\r\n  useEffect(() => {\r\n    if (data.length !== 0) {\r\n      if (exchangeRates.length === calculateAfter) {\r\n        setExchangeRates(exchangeRates.slice(1));\r\n        setExchangeRates((oldArray) => [...oldArray, data]);\r\n      } else {\r\n        setExchangeRates((oldArray) => [...oldArray, data]);\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  //Init currencies\r\n  useEffect(() => {\r\n    const currencyList = exchangeRates[0];\r\n    if (currencyList && currencies.length === 0) {\r\n      setCurrencies(Object.keys(currencyList).sort());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeRates]);\r\n\r\n  //Init exchange results\r\n  useEffect(() => {\r\n    if (currencies) {\r\n      const initExchangeResults = currencies.reduce(\r\n        (acc, cur) => ({ ...acc, [cur]: calculateResult(cur) }),\r\n        {}\r\n      );\r\n      setExchangeResults([initExchangeResults]);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeRates]);\r\n\r\n  //Checks if there is a good investment and plays sound\r\n  useEffect(() => {\r\n    if (exchangeResults.length > 0) {\r\n      if (Object.values(exchangeResults[0]).some((el) => el >= alertAtMinimum)) {\r\n        if (soundActive) {\r\n          playSound(audioRef);\r\n        }\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeResults]);\r\n\r\n  //Show only good deals\r\n  useEffect(() => {\r\n    if (showOnly) {\r\n      if (exchangeResults.length > 0) {\r\n        const filtered = Object.entries(exchangeResults[0]).filter(\r\n          ([key, value]) => value >= alertAtMinimum\r\n        );\r\n        const result = Object.fromEntries(filtered);\r\n        const resultArray = Object.keys(result);\r\n        setOnlyDeals(resultArray);\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [showOnly, exchangeResults]);\r\n\r\n  const calculateResult = (currency) => {\r\n    if (exchangeRates.length === calculateAfter) {\r\n      return exchangeRates[exchangeRates.length - 1][currency].USD / exchangeRates[0][currency].USD;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setAlertAtMinimum(tempAlertAtMinimum);\r\n  };\r\n\r\n  if (error) return <div>Failed to load</div>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n  return (\r\n    <>\r\n      <audio ref={audioRef}>\r\n        <source src={notificationSfx} type=\"audio/mp3\" />\r\n      </audio>\r\n      <Navbar\r\n        {...{\r\n          setSoundActive,\r\n          soundActive,\r\n          audioRef,\r\n          handleSubmit,\r\n          tempAlertAtMinimum,\r\n          setTempAlertAtMinimum,\r\n          setShowOnly,\r\n          showOnly,\r\n        }}\r\n      />\r\n      <Cryptos\r\n        {...{\r\n          exchangeRates,\r\n          calculateAfter,\r\n          exchangeResults,\r\n          alertAtMinimum,\r\n          calculateResult,\r\n        }}\r\n        data={showOnly ? onlyDeals : currencies}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}