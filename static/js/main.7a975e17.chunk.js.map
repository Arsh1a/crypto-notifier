{"version":3,"sources":["sounds/notification.mp3","components/Main.js","util/useApiRequest.js","App.js","reportWebVitals.js","index.js"],"names":["Main","useState","exchangeRates","setExchangeRates","currencies","setCurrencies","selectedCurrencies","url","data","setData","isLoaded","setIsLoaded","error","setError","fetchData","axios","get","then","response","catch","useEffect","interval","setInterval","clearInterval","useApiRequest","audioRef","useRef","soundActive","setSoundActive","exchangeResults","setExchangeResults","calculateAfter","alertAtMinimum","setAlertAtMinimum","tempAlertAtMinimum","setTempAlertAtMinimum","playSound","current","play","length","slice","oldArray","currencyList","Object","keys","initExchangeResults","reduce","acc","cur","calculateResult","values","some","el","currency","USD","ref","src","notificationSfx","type","className","onClick","onSubmit","e","preventDefault","required","value","onChange","target","map","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a975e17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/notification.aec03572.mp3\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useApiRequest } from \"../util/useApiRequest\";\r\nimport notificationSfx from \"../sounds/notification.mp3\";\r\nimport { MdVolumeUp, MdVolumeOff } from \"react-icons/md\";\r\n\r\nfunction Main() {\r\n  const [exchangeRates, setExchangeRates] = useState([]);\r\n  const [currencies, setCurrencies] = useState([]);\r\n  const selectedCurrencies = useState(\r\n    \"BTC,SHIB,CELO,CFX,BURGER,DNT,MASK,DATA,OG,CTXC,MBL,WAVES,MBL,ONG,AUDIO,HBAR,RLC,GTO,RAMP,SLP,DUSK,ONE,DOGE,TOMO,HARD,FORTH,CTSI,ICP,EPS,DCR,KEEP,PUNDIX,OM,COCOS,TRB,IRIS,AR,SUPER,DREP,WING,FIO,SOL,ANT,TWT,GTC,QTUM,CTK,WNXM,RVN,MTL,IOTX,SUSHI,ATOM,NKN,LINA,EGLD,STPT,ZEN\"\r\n  );\r\n  const { data, error, isLoaded } = useApiRequest(\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies}&tsyms=USD`\r\n  );\r\n  const audioRef = useRef();\r\n  const [soundActive, setSoundActive] = useState(false);\r\n  const [exchangeResults, setExchangeResults] = useState([]);\r\n  const [calculateAfter, setCalculateAfter] = useState(30);\r\n  const [alertAtMinimum, setAlertAtMinimum] = useState(1.05);\r\n  const [tempAlertAtMinimum, setTempAlertAtMinimum] = useState(1.05);\r\n\r\n  const playSound = () => {\r\n    if (audioRef.current) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  //Init\r\n  useEffect(() => {\r\n    if (data.length !== 0) {\r\n      if (exchangeRates.length === calculateAfter) {\r\n        setExchangeRates(exchangeRates.slice(1));\r\n        setExchangeRates((oldArray) => [...oldArray, data]);\r\n      } else {\r\n        setExchangeRates((oldArray) => [...oldArray, data]);\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  //Init currencies\r\n  useEffect(() => {\r\n    const currencyList = exchangeRates[0];\r\n    if (currencyList && currencies.length === 0) {\r\n      setCurrencies(Object.keys(currencyList));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeRates]);\r\n\r\n  //Init exchange results\r\n  useEffect(() => {\r\n    if (currencies) {\r\n      const initExchangeResults = currencies.reduce(\r\n        (acc, cur) => ({ ...acc, [cur]: calculateResult(cur) }),\r\n        {}\r\n      );\r\n      setExchangeResults([initExchangeResults]);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeRates]);\r\n\r\n  //Checks if there is a good investment and plays sound\r\n  useEffect(() => {\r\n    if (exchangeResults.length > 0) {\r\n      if (Object.values(exchangeResults[0]).some((el) => el >= alertAtMinimum)) {\r\n        if (soundActive) {\r\n          playSound();\r\n        }\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeResults]);\r\n\r\n  const calculateResult = (currency) => {\r\n    if (exchangeRates.length === calculateAfter) {\r\n      return exchangeRates[exchangeRates.length - 1][currency].USD / exchangeRates[0][currency].USD;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setAlertAtMinimum(tempAlertAtMinimum);\r\n  };\r\n\r\n  if (error) return <div>Failed to load</div>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n  return (\r\n    <>\r\n      <audio ref={audioRef}>\r\n        <source src={notificationSfx} type=\"audio/mp3\" />\r\n      </audio>\r\n      <div className=\"navbar\">\r\n        <div\r\n          className=\"sound\"\r\n          onClick={() => {\r\n            setSoundActive(!soundActive);\r\n            !soundActive && playSound();\r\n          }}\r\n        >\r\n          {soundActive ? <MdVolumeUp /> : <MdVolumeOff />}\r\n        </div>\r\n        <div className=\"alert-at\">\r\n          Alert at:\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              required\r\n              type=\"number\"\r\n              value={tempAlertAtMinimum}\r\n              onChange={(e) => setTempAlertAtMinimum(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Apply</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"crypto-container\">\r\n        {currencies.map((currency, index) => (\r\n          <div className=\"crypto\" key={index}>\r\n            <h1>{currency}</h1>\r\n            <div className=\"rates\">\r\n              {exchangeRates[0][currency].USD}$\r\n              {exchangeRates.length === calculateAfter && (\r\n                <>â†’{exchangeRates[exchangeRates.length - 1][currency].USD}$</>\r\n              )}\r\n            </div>\r\n            {\r\n              <p\r\n                className={\r\n                  exchangeResults[0][currency] >= alertAtMinimum ? \"going-up\" : \"going-down\"\r\n                }\r\n              >\r\n                result :{calculateResult(currency)}\r\n              </p>\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useApiRequest = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = () => {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        setIsLoaded(true);\r\n        setData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Init fetching\r\n    fetchData();\r\n    //Fetching every described second\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 20000);\r\n    return () => clearInterval(interval);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [url]);\r\n\r\n  return { error, isLoaded, data };\r\n};\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}