{"version":3,"sources":["sounds/notification.mp3","utils/playSound.ts","utils/useApiRequest.ts","components/Navbar.tsx","components/Cryptos.tsx","components/Footer.tsx","components/Main.tsx","App.tsx","reportWebVitals.js","serviceWorkerRegistration.ts","index.tsx"],"names":["playSound","audioRef","current","play","useApiRequest","_len","arguments","length","urls","Array","_key","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","isLoaded","setIsLoaded","_useState5","_useState6","error","setError","fetchData","requests","map","url","axios","get","all","then","spread","_len2","responses","_key2","combinedData","Object","assign","apply","concat","_toConsumableArray","response","console","log","catch","err","useEffect","interval","setInterval","clearInterval","Navbar","_ref","setSoundActive","soundActive","handleSubmit","tempAlertAtMinimum","setTempAlertAtMinimum","setShowDeals","showDeals","setShowFavorites","showFavorites","_jsxs","className","children","_jsx","onClick","MdVolumeUp","MdVolumeOff","_Fragment","onSubmit","required","type","value","onChange","e","target","Cryptos","currencies","exchangeRates","calculateAfter","calculateResult","exchangeResults","alertAtMinimum","setFavorites","favorites","addToFavorites","currency","removeFromFavorites","filter","item","calculateCardColor","calculatedCurrency","Math","ceil","index","style","background","USD","href","rel","title","src","height","width","alt","includes","handleFavorites","IoMdHeart","IoMdHeartEmpty","Footer","GoMarkGithub","Main","setExchangeRates","setCurrencies","_useState7","_useState8","setExchangeResults","_useState9","_useState11","_useState12","setAlertAtMinimum","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","onlyDeals","setOnlyDeals","_useState19","_useState20","_useState21","_useState22","_useApiRequest","useRef","slice","oldArray","currencyList","keys","sort","initExchangeResults","reduce","acc","cur","_objectSpread","_defineProperty","filtered","entries","_ref2","result","fromEntries","some","el","values","_ref3","_ref4","resultArray","_ref5","_ref6","savedFavorites","localStorage","getItem","JSON","parse","setItem","stringify","ref","notificationSfx","preventDefault","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cec2950a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/notification.aec03572.mp3\";","const playSound = (audioRef: React.MutableRefObject<HTMLAudioElement>) => {\r\n  if (audioRef.current) {\r\n    audioRef.current.play();\r\n  }\r\n};\r\nexport default playSound;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useApiRequest = (...urls: string[]) => {\r\n  const [data, setData] = useState<any[]>([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = () => {\r\n    // If there are multiple URLs\r\n    if (urls.length > 1) {\r\n      const requests = urls.map((url) => axios.get(url));\r\n\r\n      axios\r\n        .all(requests)\r\n        .then(\r\n          axios.spread((...responses) => {\r\n            setIsLoaded(true);\r\n            const combinedData = Object.assign(\r\n              {},\r\n              ...responses.map((response) => response.data)\r\n            );\r\n            console.log(combinedData);\r\n            setData(combinedData);\r\n          })\r\n        )\r\n        .catch((err) => {\r\n          setError(err);\r\n        });\r\n    } else if (urls.length === 1) {\r\n      // If there's just one URL\r\n      axios\r\n        .get(urls[0])\r\n        .then((response) => {\r\n          setIsLoaded(true);\r\n          setData([response.data]);\r\n        })\r\n        .catch((err) => {\r\n          setError(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Init fetching\r\n    fetchData();\r\n    // Fetching every described second\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 20000);\r\n\r\n    return () => clearInterval(interval);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, urls);\r\n\r\n  return { error, isLoaded, data };\r\n};\r\n\r\nexport default useApiRequest;\r\n","import React from \"react\";\r\nimport { MdVolumeUp, MdVolumeOff } from \"react-icons/md\";\r\nimport { playSound } from \"../utils\";\r\n\r\ninterface Props {\r\n  setSoundActive: Function;\r\n  soundActive: boolean;\r\n  audioRef: React.MutableRefObject<HTMLAudioElement>;\r\n  handleSubmit: React.FormEventHandler<HTMLFormElement>;\r\n  tempAlertAtMinimum: number;\r\n  setTempAlertAtMinimum: Function;\r\n  showDeals: boolean;\r\n  setShowDeals: Function;\r\n  showFavorites: boolean;\r\n  setShowFavorites: Function;\r\n}\r\n\r\nfunction Navbar({\r\n  setSoundActive,\r\n  soundActive,\r\n  audioRef,\r\n  handleSubmit,\r\n  tempAlertAtMinimum,\r\n  setTempAlertAtMinimum,\r\n  setShowDeals,\r\n  showDeals,\r\n  setShowFavorites,\r\n  showFavorites,\r\n}: Props) {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"left-navbar\">\r\n        <div\r\n          className=\"sound\"\r\n          onClick={() => {\r\n            setSoundActive(!soundActive);\r\n            !soundActive && playSound(audioRef);\r\n          }}\r\n        >\r\n          {soundActive ? <MdVolumeUp /> : <MdVolumeOff />}\r\n        </div>\r\n        <button onClick={() => setShowDeals(!showDeals)}>\r\n          {showDeals ? <>Show all</> : <>Show only greens</>}\r\n        </button>\r\n        <button onClick={() => setShowFavorites(!showFavorites)}>\r\n          {showFavorites ? <>Show all</> : <>Show only favorites</>}\r\n        </button>\r\n      </div>\r\n      <div className=\"right-navbar\">\r\n        <div className=\"alert-at\">\r\n          Alert at:\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              required\r\n              type=\"number\"\r\n              value={tempAlertAtMinimum}\r\n              onChange={(e) => setTempAlertAtMinimum(e.target.value)}\r\n            />\r\n            <input type=\"submit\" value=\"Apply\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { IoMdHeartEmpty, IoMdHeart } from \"react-icons/io\";\r\n\r\ninterface Props {\r\n  currencies: string[];\r\n  exchangeRates: any[];\r\n  calculateAfter: number;\r\n  exchangeResults: string[];\r\n  alertAtMinimum: number;\r\n  calculateResult: Function;\r\n  data: string[];\r\n  setFavorites: Function;\r\n  favorites: string[];\r\n}\r\n\r\nfunction Cryptos({\r\n  currencies,\r\n  exchangeRates,\r\n  calculateAfter,\r\n  exchangeResults,\r\n  alertAtMinimum,\r\n  calculateResult,\r\n  data,\r\n  setFavorites,\r\n  favorites,\r\n}: Props) {\r\n  const handleFavorites = (currency: string) => {\r\n    if (favorites.includes(currency)) {\r\n      removeFromFavorites(currency);\r\n    }\r\n    if (!favorites.includes(currency)) {\r\n      addToFavorites(currency);\r\n    }\r\n  };\r\n\r\n  const addToFavorites = (currency: string) => {\r\n    setFavorites([...favorites, currency]);\r\n  };\r\n\r\n  const removeFromFavorites = (currency: string) => {\r\n    setFavorites(favorites.filter((item) => item !== currency));\r\n  };\r\n\r\n  const calculateCardColor = (currency: string) => {\r\n    let calculatedCurrency = calculateResult(currency);\r\n\r\n    if (calculatedCurrency > 1 && calculatedCurrency <= 1.002) {\r\n      return \"linear-gradient(90deg, rgba(205,171,0,1) 0%, rgba(231,209,66,1) 100%)\";\r\n    }\r\n    if (calculatedCurrency >= 1.002 && calculatedCurrency <= 1.004) {\r\n      return \"linear-gradient(90deg, rgba(0,7,126,1) 0%, rgba(30,36,156,1) 100%)\";\r\n    }\r\n    if (calculatedCurrency >= 1.004) {\r\n      return \"linear-gradient(90deg, rgba(116,15,15,1) 0%, rgba(183,25,25,1) 100%)\";\r\n    }\r\n  };\r\n\r\n  if (data.length === 0) return <h1>Empty</h1>;\r\n\r\n  return (\r\n    <>\r\n      {exchangeRates.length !== calculateAfter && (\r\n        <div className=\"loading loading-results\">\r\n          It takes {Math.ceil((20 * calculateAfter) / 60)} minutes to calculate results\r\n        </div>\r\n      )}\r\n      <div className=\"crypto-container\">\r\n        {data.map((currency: any, index) => (\r\n          <div className=\"crypto\" style={{ background: calculateCardColor(currency) }} key={index}>\r\n            <h1>{currency}</h1>\r\n            <div className=\"rates\">\r\n              {exchangeRates ? exchangeRates[0][currency].USD : \"TEST\"}$\r\n              {exchangeRates.length === calculateAfter && (\r\n                <>→{exchangeRates[exchangeRates.length - 1][currency].USD}$</>\r\n              )}\r\n            </div>\r\n            {\r\n              <p\r\n              // className={\r\n              //   Number(exchangeResults[0][currency]) >= alertAtMinimum ? \"going-up\" : \"going-down\"\r\n              // }\r\n              >\r\n                result :{calculateResult(currency)}\r\n              </p>\r\n            }\r\n            <div className=\"crypto-exchange\">\r\n              <a\r\n                href={`https://www.binance.com/en/trade/${currency}_USDT`}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <img\r\n                  title={`Trade ${currency} in Binance`}\r\n                  src=\"/crypto-notifier/binance-icon.svg\"\r\n                  height=\"25\"\r\n                  width=\"25\"\r\n                  alt=\"Binance\"\r\n                />\r\n              </a>\r\n              <span\r\n                className=\"crypto-favorite\"\r\n                title=\"Favorite\"\r\n                onClick={() => handleFavorites(currency)}\r\n              >\r\n                {favorites.includes(currency) ? <IoMdHeart /> : <IoMdHeartEmpty />}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cryptos;\r\n","import React from \"react\";\r\nimport { GoMarkGithub } from \"react-icons/go\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <a href=\"https://github.com/Arsh1a/crypto-notifier\" target=\"_blank\" rel=\"noreferrer\">\r\n        <GoMarkGithub />\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, useRef, FormEvent } from \"react\";\r\nimport notificationSfx from \"../sounds/notification.mp3\";\r\nimport { useApiRequest, playSound } from \"../utils\";\r\nimport Navbar from \"./Navbar\";\r\nimport Cryptos from \"./Cryptos\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst selectedCurrencies1 =\r\n  \"BTC,SHIB,CELO,CFX,BURGER,DNT,MASK,DATA,OG,CTXC,MBL,WAVES,MBL,ONG,AUDIO,HBAR,RLC,GTO,RAMP,SLP,DUSK,ONE,DOGE,TOMO,HARD,FORTH,CTSI,ICP,EPS,DCR,KEEP,PUNDIX,OM,COCOS,TRB,IRIS,AR,SUPER,DREP,WING,FIO,SOL,ANT,TWT,GTC,QTUM,CTK,WNXM,RVN,MTL,IOTX,SUSHI,ATOM,NKN,LINA,EGLD,STPT,ZEN,ZIL,ZRX,ZEC,YFI,XMR,XVS,XTZ\";\r\nconst selectedCurrencies2 =\r\n  \"ATA,ALPHA,ALICE,ARPA,AVE,AVA,ARDR,ANRR,BAL,BZRX,BEL,BADGER,BTT,BEAN,BCH,COMP,CRV,COS,CAKE,DEGO,DGB,DOT,ETH,EOS,ETC,FTT,HIVE,INJ,JST,KSM,LRC,LINK,NBS,LIT,MFT,MKR,MDT,ONT,ORN,PERF,PNT,RUNE,REEF,REN,ROSE,SC,STMX,SKL,SAND,SNX,STX,SRM,TRB,TROY,TRU,TORN,THETA,TCT,POLS,TRX,TKO,UNO,ATM,AUTO,AKRO,ARB\";\r\nconst selectedCurrencies3 =\r\n  \"ALGO,BAR,BAND,BNB,BLZ,DODO,DIA,FIS,FIRO,GXS,GRT,IOTA,JUV,KEY,KNC,KLAY,LUNA,LSK,NULS,NU,NEO,OCEN,OGN,OMG,PSG,POND,PHA,PERP,PERL,PAX,RIF,RSR,SFP,SXP,SUN,STORJ,TLM,UNFI,UTK,VET,WTC,WAN,WRX,WNXM,WIN,XRP,XLM,XEM,LTC,DAI,AAVE,ADA,FTM,MATIC,AXS,MANA,AVAX,GMT,BAT,GRAPH,APT,ENS,SSV,SNT,ENJ,API3,APE\";\r\nconst selectedCurrencies4 =\r\n  \"IMX,BLUR,TON,GMX,CHZ,DAO,DYDX,RDNT,WBTC,CELR,CVC,FIL,FLOW,CVX,QNT,EGALA,GLM,LPT,LDO,MAGIC,NMR,NEAR,1INCH\";\r\nfunction Main() {\r\n  const [exchangeRates, setExchangeRates] = useState<any[]>([]);\r\n  const [currencies, setCurrencies] = useState<string[]>([]);\r\n  const [soundActive, setSoundActive] = useState<boolean>(false);\r\n  const [exchangeResults, setExchangeResults] = useState<any[]>([]);\r\n  const [calculateAfter] = useState<number>(5);\r\n  const [alertAtMinimum, setAlertAtMinimum] = useState<number>(1.05);\r\n  const [tempAlertAtMinimum, setTempAlertAtMinimum] = useState<number>(1.05);\r\n  const [showDeals, setShowDeals] = useState<boolean>(false);\r\n  const [onlyDeals, setOnlyDeals] = useState<string[]>([]);\r\n  const [showFavorites, setShowFavorites] = useState<boolean>(false);\r\n  const [favorites, setFavorites] = useState<string[]>([]);\r\n  const { data, error, isLoaded } = useApiRequest(\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies1}&tsyms=USD`,\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies2}&tsyms=USD`,\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies3}&tsyms=USD`,\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies4}&tsyms=USD`\r\n  );\r\n  const audioRef = useRef() as React.MutableRefObject<HTMLAudioElement>;\r\n\r\n  //Init\r\n  useEffect(() => {\r\n    if (data.length !== 0) {\r\n      if (exchangeRates.length === calculateAfter) {\r\n        setExchangeRates(exchangeRates.slice(1));\r\n        setExchangeRates((oldArray) => [...oldArray, data]);\r\n      } else {\r\n        setExchangeRates((oldArray) => [...oldArray, data]);\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  //Init currencies\r\n  useEffect(() => {\r\n    const currencyList = exchangeRates[0];\r\n    if (currencyList && currencies.length === 0) {\r\n      setCurrencies(Object.keys(currencyList).sort());\r\n    }\r\n  }, [exchangeRates]);\r\n\r\n  //Init exchange results\r\n  useEffect(() => {\r\n    if (currencies) {\r\n      const initExchangeResults = currencies.reduce(\r\n        (acc, cur) => ({ ...acc, [cur]: calculateResult(cur) }),\r\n        {}\r\n      );\r\n      setExchangeResults([initExchangeResults]);\r\n    }\r\n  }, [exchangeRates]);\r\n\r\n  //Checks if there is a good investment and plays sound\r\n  useEffect(() => {\r\n    if (exchangeResults.length > 0) {\r\n      //Plays sound if one of favorites goes beyond alertAtMinimum\r\n      if (showFavorites) {\r\n        const filtered = Object.entries(exchangeResults[0]).filter(\r\n          ([key, value]: any) => value >= alertAtMinimum\r\n        );\r\n        const result = Object.fromEntries(filtered);\r\n        if (Object.keys(result).some((el: any) => favorites.includes(el))) {\r\n          if (soundActive) {\r\n            playSound(audioRef);\r\n          }\r\n        }\r\n        //Plays sound if showFavorite not active and all currencies goes beyond alertAtMinimum\r\n      } else {\r\n        if (\r\n          Object.values(exchangeResults[0]).some(\r\n            (el: any) => el >= alertAtMinimum\r\n          )\r\n        ) {\r\n          if (soundActive) {\r\n            playSound(audioRef);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [exchangeResults]);\r\n\r\n  //Show only good deals\r\n  useEffect(() => {\r\n    if (showDeals) {\r\n      if (exchangeResults.length > 0) {\r\n        if (showFavorites) {\r\n          //Show good deals for favorites\r\n          const filtered = Object.entries(exchangeResults[0]).filter(\r\n            ([key, value]: any) => value >= alertAtMinimum\r\n          );\r\n          const result = Object.fromEntries(filtered);\r\n          const resultArray = Object.keys(result);\r\n          setOnlyDeals(resultArray.filter((item) => favorites.includes(item)));\r\n        }\r\n        //Show good deals for all currencies\r\n        else {\r\n          const filtered = Object.entries(exchangeResults[0]).filter(\r\n            ([key, value]: any) => value >= alertAtMinimum\r\n          );\r\n          const result = Object.fromEntries(filtered);\r\n          const resultArray = Object.keys(result);\r\n          setOnlyDeals(resultArray);\r\n        }\r\n      }\r\n    }\r\n  }, [showDeals, showFavorites, exchangeResults, alertAtMinimum]);\r\n\r\n  //Get favorites from localstorage\r\n  useEffect(() => {\r\n    const savedFavorites = localStorage.getItem(\"favorites\");\r\n    if (savedFavorites) {\r\n      setFavorites(JSON.parse(savedFavorites));\r\n    }\r\n  }, []);\r\n\r\n  //Set favorites to localstorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const calculateResult = (currency: string) => {\r\n    if (exchangeRates.length === calculateAfter) {\r\n      return (\r\n        exchangeRates[exchangeRates.length - 1][currency].USD /\r\n        exchangeRates[0][currency].USD\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setAlertAtMinimum(tempAlertAtMinimum);\r\n  };\r\n\r\n  const handleAppState = () => {\r\n    if (!showDeals && !showFavorites) {\r\n      return currencies;\r\n    }\r\n    if (showDeals && showFavorites) {\r\n      return onlyDeals;\r\n    }\r\n    if (!showDeals && showFavorites) {\r\n      return favorites;\r\n    }\r\n    if (showDeals && !showFavorites) {\r\n      return onlyDeals;\r\n    }\r\n    return currencies;\r\n  };\r\n\r\n  if (error) return <div>Failed to load</div>;\r\n  if (!isLoaded) return <div className=\"loading\">Loading</div>;\r\n  return (\r\n    <>\r\n      <audio ref={audioRef}>\r\n        <source src={notificationSfx} type=\"audio/mp3\" />\r\n      </audio>\r\n      <Navbar\r\n        {...{\r\n          setSoundActive,\r\n          soundActive,\r\n          audioRef,\r\n          handleSubmit,\r\n          tempAlertAtMinimum,\r\n          setTempAlertAtMinimum,\r\n          setShowDeals,\r\n          showDeals,\r\n          setShowFavorites,\r\n          showFavorites,\r\n        }}\r\n      />\r\n      <Cryptos\r\n        {...{\r\n          currencies,\r\n          exchangeRates,\r\n          calculateAfter,\r\n          exchangeResults,\r\n          alertAtMinimum,\r\n          calculateResult,\r\n          favorites,\r\n          setFavorites,\r\n        }}\r\n        data={handleAppState()}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./components/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}