{"version":3,"sources":["sounds/notification.mp3","utils/playSound.js","utils/useApiRequest.js","components/Navbar.js","components/Cryptos.js","components/Footer.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["playSound","audioRef","current","play","useApiRequest","url","secondUrl","useState","data","setData","isLoaded","setIsLoaded","error","setError","fetchData","axios","all","get","then","spread","obj1","obj2","catch","response","useEffect","interval","setInterval","clearInterval","Navbar","setSoundActive","soundActive","handleSubmit","tempAlertAtMinimum","setTempAlertAtMinimum","setShowOnly","showOnly","className","onClick","onSubmit","required","type","value","onChange","e","target","Cryptos","currencies","exchangeRates","calculateAfter","exchangeResults","alertAtMinimum","calculateResult","onlyDeals","length","map","currency","index","USD","Footer","href","rel","Main","setExchangeRates","setCurrencies","setExchangeResults","setAlertAtMinimum","setOnlyDeals","useRef","slice","oldArray","currencyList","Object","keys","sort","initExchangeResults","reduce","acc","cur","values","some","el","filtered","entries","filter","result","fromEntries","resultArray","ref","src","notificationSfx","preventDefault","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,MAA0B,yCCK1BA,EALG,SAACC,GACbA,EAASC,SACXD,EAASC,QAAQC,Q,gBC+CNC,EA9CO,SAACC,EAAKC,GAC1B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAY,WACZR,EACFS,IACGC,IAAI,CAACD,IAAME,IAAIZ,GAAMU,IAAME,IAAIX,KAC/BY,KACCH,IAAMI,QAAO,SAACC,EAAMC,GAClBV,GAAY,GACZF,EAAQ,2BAAKW,EAAKZ,MAASa,EAAKb,WAGnCc,OAAM,SAACV,GACNC,EAASD,MAGbG,IACGE,IAAIZ,GACJa,MAAK,SAACK,GACLZ,GAAY,GACZF,EAAQc,EAASf,SAElBc,OAAM,SAACV,GACNC,EAASD,OAiBjB,OAZAY,qBAAU,WAERV,IAEA,IAAMW,EAAWC,aAAY,WAC3BZ,MACC,KACH,OAAO,kBAAMa,cAAcF,MAG1B,CAACpB,EAAKC,IAEF,CAAEM,QAAOF,WAAUF,S,eCEboB,MA5Cf,YASI,IARFC,EAQC,EARDA,eACAC,EAOC,EAPDA,YACA7B,EAMC,EANDA,SACA8B,EAKC,EALDA,aACAC,EAIC,EAJDA,mBACAC,EAGC,EAHDA,sBACAC,EAEC,EAFDA,YACAC,EACC,EADDA,SAEA,OACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEA,UAAU,QACVC,QAAS,WACPR,GAAgBC,IACfA,GAAe9B,EAAUC,IAJ9B,SAOG6B,EAAc,cAAC,IAAD,IAAiB,cAAC,IAAD,MAElC,wBAAQO,QAAS,kBAAMH,GAAaC,IAApC,SACGA,EAAW,gDAAgB,4DAGhC,qBAAKC,UAAU,eAAf,SACE,sBAAKA,UAAU,WAAf,sBAEE,uBAAME,SAAUP,EAAhB,UACE,uBACEQ,UAAQ,EACRC,KAAK,SACLC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAsBU,EAAEC,OAAOH,UAElD,uBAAOD,KAAK,SAASC,MAAM,sBCKxBI,MA3Cf,YAUG,EATDC,WASE,IARFC,EAQC,EARDA,cACAC,EAOC,EAPDA,eACAC,EAMC,EANDA,gBACAC,EAKC,EALDA,eACAC,EAIC,EAJDA,gBAGA3C,GACC,EAHD4C,UAGC,EAFDjB,SAEC,EADD3B,MAEA,OAAoB,IAAhBA,EAAK6C,OAAqB,uCAE5B,qCACGN,EAAcM,SAAWL,GACxB,qBAAKZ,UAAU,kBAAf,uDAEF,qBAAKA,UAAU,mBAAf,SACG5B,EAAK8C,KAAI,SAACC,EAAUC,GAAX,OACR,sBAAKpB,UAAU,SAAf,UACE,6BAAKmB,IACL,sBAAKnB,UAAU,QAAf,UACGW,EAAc,GAAGQ,GAAUE,IAD9B,IAEGV,EAAcM,SAAWL,GACxB,8CAAID,EAAcA,EAAcM,OAAS,GAAGE,GAAUE,IAAtD,UAIF,oBACErB,UACEa,EAAgB,GAAGM,IAAaL,EAAiB,WAAa,aAFlE,qBAKWC,EAAgBI,QAdFC,Y,QCRxBE,MAVf,WACE,OACE,iCACE,mBAAGC,KAAK,4CAA4Cf,OAAO,SAASgB,IAAI,aAAxE,SACE,cAAC,IAAD,SCgIOC,MA3Hf,WACE,MAA0CtD,mBAAS,IAAnD,mBAAOwC,EAAP,KAAsBe,EAAtB,KACA,EAAoCvD,mBAAS,IAA7C,mBAAOuC,EAAP,KAAmBiB,EAAnB,KACA,EAAsCxD,oBAAS,GAA/C,mBAAOuB,EAAP,KAAoBD,EAApB,KACA,EAA8CtB,mBAAS,IAAvD,mBAAO0C,EAAP,KAAwBe,EAAxB,KACA,EAAyBzD,mBAAS,IAA3ByC,EAAP,oBACA,EAA4CzC,mBAAS,MAArD,mBAAO2C,EAAP,KAAuBe,EAAvB,KACA,EAAoD1D,mBAAS,MAA7D,mBAAOyB,EAAP,KAA2BC,EAA3B,KACA,EAAgC1B,oBAAS,GAAzC,mBAAO4B,EAAP,KAAiBD,EAAjB,KACA,EAAkC3B,mBAAS,IAA3C,mBAAO6C,EAAP,KAAkBc,EAAlB,KACA,EAAkC9D,EAAc,2DAAD,OAd/C,4SAc+C,gFAZ/C,yRAY+C,eAAvCI,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MAAOF,EAArB,EAAqBA,SAIfT,EAAWkE,mBAGjB3C,qBAAU,WACY,IAAhBhB,EAAK6C,SACHN,EAAcM,SAAWL,GAC3Bc,EAAiBf,EAAcqB,MAAM,IACrCN,GAAiB,SAACO,GAAD,4BAAkBA,GAAlB,CAA4B7D,QAE7CsD,GAAiB,SAACO,GAAD,4BAAkBA,GAAlB,CAA4B7D,UAKhD,CAACA,IAGJgB,qBAAU,WACR,IAAM8C,EAAevB,EAAc,GAC/BuB,GAAsC,IAAtBxB,EAAWO,QAC7BU,EAAcQ,OAAOC,KAAKF,GAAcG,UAGzC,CAAC1B,IAGJvB,qBAAU,WACR,GAAIsB,EAAY,CACd,IAAM4B,EAAsB5B,EAAW6B,QACrC,SAACC,EAAKC,GAAN,mBAAC,eAAmBD,GAApB,kBAA0BC,EAAM1B,EAAgB0B,OAChD,IAEFb,EAAmB,CAACU,OAGrB,CAAC3B,IAGJvB,qBAAU,WACJyB,EAAgBI,OAAS,GACvBkB,OAAOO,OAAO7B,EAAgB,IAAI8B,MAAK,SAACC,GAAD,OAAQA,GAAM9B,MACnDpB,GACF9B,EAAUC,KAKf,CAACgD,IAGJzB,qBAAU,WACR,GAAIW,GACEc,EAAgBI,OAAS,EAAG,CAC9B,IAAM4B,EAAWV,OAAOW,QAAQjC,EAAgB,IAAIkC,QAClD,qDAA2BjC,KAEvBkC,EAASb,OAAOc,YAAYJ,GAC5BK,EAAcf,OAAOC,KAAKY,GAChClB,EAAaoB,MAIhB,CAACnD,EAAUc,IAEd,IAAME,EAAkB,SAACI,GACvB,GAAIR,EAAcM,SAAWL,EAC3B,OAAOD,EAAcA,EAAcM,OAAS,GAAGE,GAAUE,IAAMV,EAAc,GAAGQ,GAAUE,KAS9F,OAAI7C,EAAc,iDACbF,EAEH,qCACE,uBAAO6E,IAAKtF,EAAZ,SACE,wBAAQuF,IAAKC,EAAiBjD,KAAK,gBAErC,cAAC,EAAD,CAEIX,iBACAC,cACA7B,WACA8B,aAjBa,SAACY,GACpBA,EAAE+C,iBACFzB,EAAkBjC,IAgBZA,qBACAC,wBACAC,cACAC,aAGJ,cAAC,EAAD,CAEIY,gBACAC,iBACAC,kBACAC,iBACAC,kBAEF3C,KAAM2B,EAAWiB,EAAYN,IAE/B,cAAC,EAAD,OA5BkB,8CC3FT6C,MARf,WACE,OACE,qBAAKvD,UAAU,MAAf,SACE,cAAC,EAAD,OCMSwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f3093692.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/notification.aec03572.mp3\";","const playSound = (audioRef) => {\r\n  if (audioRef.current) {\r\n    audioRef.current.play();\r\n  }\r\n};\r\nexport default playSound;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useApiRequest = (url, secondUrl) => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = () => {\r\n    if (secondUrl) {\r\n      axios\r\n        .all([axios.get(url), axios.get(secondUrl)])\r\n        .then(\r\n          axios.spread((obj1, obj2) => {\r\n            setIsLoaded(true);\r\n            setData({ ...obj1.data, ...obj2.data });\r\n          })\r\n        )\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(url)\r\n        .then((response) => {\r\n          setIsLoaded(true);\r\n          setData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Init fetching\r\n    fetchData();\r\n    //Fetching every described second\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 20000);\r\n    return () => clearInterval(interval);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [url, secondUrl]);\r\n\r\n  return { error, isLoaded, data };\r\n};\r\n\r\nexport default useApiRequest;\r\n","import React from \"react\";\r\nimport { MdVolumeUp, MdVolumeOff } from \"react-icons/md\";\r\nimport { playSound } from \"../utils\";\r\n\r\nfunction Navbar({\r\n  setSoundActive,\r\n  soundActive,\r\n  audioRef,\r\n  handleSubmit,\r\n  tempAlertAtMinimum,\r\n  setTempAlertAtMinimum,\r\n  setShowOnly,\r\n  showOnly,\r\n}) {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"left-navbar\">\r\n        <div\r\n          className=\"sound\"\r\n          onClick={() => {\r\n            setSoundActive(!soundActive);\r\n            !soundActive && playSound(audioRef);\r\n          }}\r\n        >\r\n          {soundActive ? <MdVolumeUp /> : <MdVolumeOff />}\r\n        </div>\r\n        <button onClick={() => setShowOnly(!showOnly)}>\r\n          {showOnly ? <>Show all</> : <>Show only green</>}\r\n        </button>\r\n      </div>\r\n      <div className=\"right-navbar\">\r\n        <div className=\"alert-at\">\r\n          Alert at:\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              required\r\n              type=\"number\"\r\n              value={tempAlertAtMinimum}\r\n              onChange={(e) => setTempAlertAtMinimum(e.target.value)}\r\n            />\r\n            <input type=\"submit\" value=\"Apply\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Cryptos({\r\n  currencies,\r\n  exchangeRates,\r\n  calculateAfter,\r\n  exchangeResults,\r\n  alertAtMinimum,\r\n  calculateResult,\r\n  onlyDeals,\r\n  showOnly,\r\n  data,\r\n}) {\r\n  if (data.length === 0) return <h1>Empty</h1>;\r\n  return (\r\n    <>\r\n      {exchangeRates.length !== calculateAfter && (\r\n        <div className=\"loading-results\">It takes 5 minute to calculate results...</div>\r\n      )}\r\n      <div className=\"crypto-container\">\r\n        {data.map((currency, index) => (\r\n          <div className=\"crypto\" key={index}>\r\n            <h1>{currency}</h1>\r\n            <div className=\"rates\">\r\n              {exchangeRates[0][currency].USD}$\r\n              {exchangeRates.length === calculateAfter && (\r\n                <>â†’{exchangeRates[exchangeRates.length - 1][currency].USD}$</>\r\n              )}\r\n            </div>\r\n            {\r\n              <p\r\n                className={\r\n                  exchangeResults[0][currency] >= alertAtMinimum ? \"going-up\" : \"going-down\"\r\n                }\r\n              >\r\n                result :{calculateResult(currency)}\r\n              </p>\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cryptos;\r\n","import React from \"react\";\r\nimport { GoMarkGithub } from \"react-icons/go\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <a href=\"https://github.com/Arsh1a/crypto-notifier\" target=\"_blank\" rel=\"noreferrer\">\r\n        <GoMarkGithub />\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport notificationSfx from \"../sounds/notification.mp3\";\r\nimport { useApiRequest, playSound } from \"../utils\";\r\nimport Navbar from \"./Navbar\";\r\nimport Cryptos from \"./Cryptos\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst selectedCurrencies1 =\r\n  \"BTC,SHIB,CELO,CFX,BURGER,DNT,MASK,DATA,OG,CTXC,MBL,WAVES,MBL,ONG,AUDIO,HBAR,RLC,GTO,RAMP,SLP,DUSK,ONE,DOGE,TOMO,HARD,FORTH,CTSI,ICP,EPS,DCR,KEEP,PUNDIX,OM,COCOS,TRB,IRIS,AR,SUPER,DREP,WING,FIO,SOL,ANT,TWT,GTC,QTUM,CTK,WNXM,RVN,MTL,IOTX,SUSHI,ATOM,NKN,LINA,EGLD,STPT,ZEN,ZIL,ZRX,ZEC,YFI,XMR,XVS,XTZ\";\r\nconst selectedCurrencies2 =\r\n  \"ATA,ALPHA,ALICE,ARPA,AVE,AVA,ARDR,ANRR,BAL,BZRX,BEL,BADGER,BTT,BEAN,BCH,COMP,CRV,COS,CAKE,DEGO,DGB,DOT,ETH,EOS,ETC,FTT,HIVE,INJ,JST,KSM,LRC,LINK,NBS,LIT,MFT,MKR,MDT,ONT,ORN,PERF,PNT,RUNE,REEF,REP,REN,ROSE,SC,STMX,SKL,SAND,SNX,STX,SRM,TRB,TROY,TRU,TORN,THETA,TCT,POLS,TRX,TKO,UNO\";\r\n\r\nfunction Main() {\r\n  const [exchangeRates, setExchangeRates] = useState([]);\r\n  const [currencies, setCurrencies] = useState([]);\r\n  const [soundActive, setSoundActive] = useState(false);\r\n  const [exchangeResults, setExchangeResults] = useState([]);\r\n  const [calculateAfter] = useState(15);\r\n  const [alertAtMinimum, setAlertAtMinimum] = useState(1.05);\r\n  const [tempAlertAtMinimum, setTempAlertAtMinimum] = useState(1.05);\r\n  const [showOnly, setShowOnly] = useState(false);\r\n  const [onlyDeals, setOnlyDeals] = useState([]);\r\n  const { data, error, isLoaded } = useApiRequest(\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies1}&tsyms=USD`,\r\n    `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${selectedCurrencies2}&tsyms=USD`\r\n  );\r\n  const audioRef = useRef();\r\n\r\n  //Init\r\n  useEffect(() => {\r\n    if (data.length !== 0) {\r\n      if (exchangeRates.length === calculateAfter) {\r\n        setExchangeRates(exchangeRates.slice(1));\r\n        setExchangeRates((oldArray) => [...oldArray, data]);\r\n      } else {\r\n        setExchangeRates((oldArray) => [...oldArray, data]);\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  //Init currencies\r\n  useEffect(() => {\r\n    const currencyList = exchangeRates[0];\r\n    if (currencyList && currencies.length === 0) {\r\n      setCurrencies(Object.keys(currencyList).sort());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeRates]);\r\n\r\n  //Init exchange results\r\n  useEffect(() => {\r\n    if (currencies) {\r\n      const initExchangeResults = currencies.reduce(\r\n        (acc, cur) => ({ ...acc, [cur]: calculateResult(cur) }),\r\n        {}\r\n      );\r\n      setExchangeResults([initExchangeResults]);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeRates]);\r\n\r\n  //Checks if there is a good investment and plays sound\r\n  useEffect(() => {\r\n    if (exchangeResults.length > 0) {\r\n      if (Object.values(exchangeResults[0]).some((el) => el >= alertAtMinimum)) {\r\n        if (soundActive) {\r\n          playSound(audioRef);\r\n        }\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [exchangeResults]);\r\n\r\n  //Show only good deals\r\n  useEffect(() => {\r\n    if (showOnly) {\r\n      if (exchangeResults.length > 0) {\r\n        const filtered = Object.entries(exchangeResults[0]).filter(\r\n          ([key, value]) => value >= alertAtMinimum\r\n        );\r\n        const result = Object.fromEntries(filtered);\r\n        const resultArray = Object.keys(result);\r\n        setOnlyDeals(resultArray);\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [showOnly, exchangeResults]);\r\n\r\n  const calculateResult = (currency) => {\r\n    if (exchangeRates.length === calculateAfter) {\r\n      return exchangeRates[exchangeRates.length - 1][currency].USD / exchangeRates[0][currency].USD;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setAlertAtMinimum(tempAlertAtMinimum);\r\n  };\r\n\r\n  if (error) return <div>Failed to load</div>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n  return (\r\n    <>\r\n      <audio ref={audioRef}>\r\n        <source src={notificationSfx} type=\"audio/mp3\" />\r\n      </audio>\r\n      <Navbar\r\n        {...{\r\n          setSoundActive,\r\n          soundActive,\r\n          audioRef,\r\n          handleSubmit,\r\n          tempAlertAtMinimum,\r\n          setTempAlertAtMinimum,\r\n          setShowOnly,\r\n          showOnly,\r\n        }}\r\n      />\r\n      <Cryptos\r\n        {...{\r\n          exchangeRates,\r\n          calculateAfter,\r\n          exchangeResults,\r\n          alertAtMinimum,\r\n          calculateResult,\r\n        }}\r\n        data={showOnly ? onlyDeals : currencies}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}